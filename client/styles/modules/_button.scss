@import 'styles/configs';
@import 'styles/mixins/button';
.btn {
  display: inline-block;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  user-select: none;
  border: 1px solid transparent;
  text-decoration: none;
  transition: all 0.2s ease-in-out;
  @include button-size-variant($btn_padding, $btn_font-size, $btn_line-height, $btn_border-radius);
}

$btn-variants: (
  primary: ($btn_color--primary, $btn_bgc--primary, $btn_border-color--primary),
  success: ($btn_color--success, $btn_bgc--success, $btn_border-color--success)
);
@each $variant, $params in $btn-variants {
  .btn--#{$variant} {
    @include button-variant(nth($params, 1), nth($params, 2), nth($params, 3));
    &-outline {
      @include button-outline-variant(nth($params, 2));
    }
  }
}

$size-variants: (
  lg: ($btn_padding--lg, $btn_font-size--lg, $btn_line-height--lg, $btn_border-radius--lg),
  sm: ($btn_padding--sm, $btn_font-size--sm, $btn_line-height--sm, $btn_border-radius--sm)
);
@each $size, $params in $size-variants {
  .btn--#{$size} {
    @include button-size-variant(nth($params, 1), nth($params, 2), nth($params, 3), nth($params, 4));
    &.btn--rounded {
      border-radius: nth($params, 2) *  nth($params, 3) / 2 + nth(nth($params, 1) , 1);
    }
  }
  .btn--rounded {
    outline: none;
    border-radius: $btn_font-size * $btn_line-height / 2 + nth($btn_padding, 1);
  }
}

.btn--raised {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
}
.btn--block {
  width: 100%;
}
